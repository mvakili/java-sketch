package PasswordMap;

Object PasswordMap_PasswordMap(Object self) {
  self.passMap_PasswordMap = HashMap_HashMap();
  self.masterHash_PasswordMap = String_String_char_int_int(new Object(__cid=String()), new Array_char(length=15+1, A="Secret Password"), 0, 15);
  return self;
}

void add_String_String(Object self, Object tag, Object passEncryption) {
  (self.passMap_PasswordMap.__cid == HashMap() ? put_Object_Object_Object@HashMap(self.passMap_PasswordMap, tag, passEncryption) : null);
}

void remove_String(Object self, Object tag) {
  if ((self.passMap_PasswordMap.__cid == HashMap() ? containsKey_Object_Object@HashMap(self.passMap_PasswordMap, tag) : 0)) (self.passMap_PasswordMap.__cid == HashMap() ? remove_Object_Object@HashMap(self.passMap_PasswordMap, tag) : null);
}

Object get_String(Object self, Object domainHash) {
  return (self.passMap_PasswordMap.__cid == HashMap() ? get_Object_Object@HashMap(self.passMap_PasswordMap, domainHash) : null);
}

